version: "3"
services:
  app:
    image: "andersenlab-hotel:latest"
    build:
      context: ./
    container_name: hotel
    environment:
      PERSISTENCE_JDBC_URL: jdbc:postgresql://postgresql:5432/hotel-jpa
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: root
      HOTEL_KAFKA_TOPIC: publish
      SPRING_KAFKA_BOOTSTRAPSERVERS: apache-kafka:9092
    depends_on:
      - postgresql
      - apache-kafka
    ports:
      - "8080:8080"
  kafka-consumer:
    image: kafka-consumer:1.0
    build:
      context: ./
      args:
        module: kafka-consumer
    container_name: kafka-consumer
    environment:
      APACHEKAFKACONSUMER_KAFKA_TOPIC: publish
      SPRING_KAFKA_BOOTSTRAPSERVERS: apache-kafka:9092
  postgresql:
    image: "postgres:15.2-alpine"
    container_name: postgresql
    restart: always
    environment:
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=hotel-jpa
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    healthcheck:
      test: "nc -z localhost 2181 || exit 1"
      interval: 5s
      timeout: 5s
      retries: 10
    ports:
      - "2181"
  apache-kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: apache-kafka
    depends_on:
      zookeeper:
        condition: service_healthy
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://apache-kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
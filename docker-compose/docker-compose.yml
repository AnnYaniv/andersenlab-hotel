version: "3"
services:
  postgresql:
    image: "postgres:15.2-alpine"
    container_name: postgresql
    environment:
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=hotel-jpa
    ports:
      - "5432"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
  kafka-consumer:
    image: annayaniv/kafka-consumer:1.0
    build:
      context: ..
      args:
        module: kafka-consumer
    container_name: kafka-consumer
    environment:
      APACHE-KAFKA-CONSUMER_KAFKA_TOPIC: publish
      SPRING_KAFKA_BOOTSTRAPSERVERS: apache-kafka:9092
    depends_on:
      - apache-kafka
  hotel:
    image: "andersenlab-hotel:latest"
    build:
      context: ..
      args:
        module: hotel
    container_name: hotel
    environment:
      PERSISTENCE_JDBC_URL: jdbc:postgresql://postgresql:5432/hotel-jpa
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: root
      HOTEL_KAFKA_TOPIC: publish
      SPRING_KAFKA_BOOTSTRAPSERVERS: apache-kafka:9092
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUERURI: http://keycloak:8080/realms/hotel
    depends_on:
      - postgresql
    ports:
      - "8081:8080"
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.3
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    healthcheck:
      test: "nc -z localhost 2181 || exit 1"
      interval: 5s
      timeout: 5s
      retries: 10
    ports:
      - "2181"
  apache-kafka:
    image: confluentinc/cp-kafka:7.4.3
    container_name: apache-kafka
    depends_on:
      zookeeper:
        condition: service_healthy
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://apache-kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092"
  keycloak:
    image: keycloak/keycloak:21.1
    container_name: keycloak
    depends_on:
      - postgresql
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgresql:5432/keycloak
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: root
      KC_HEALTH_ENABLED: "true"
    command: start-dev --import-realm
    ports:
      - "8080:8080"
    volumes:
      - ./realm.json:/opt/keycloak/data/import/realm.json